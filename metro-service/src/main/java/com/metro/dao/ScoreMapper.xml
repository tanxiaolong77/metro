<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.metro.dao.ScoreMapper">
  <resultMap id="BaseResultMap" type="com.metro.model.Score">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="real_name" jdbcType="VARCHAR" property="realName" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="user_card" jdbcType="VARCHAR" property="userCard" />
    <result column="user_number" jdbcType="VARCHAR" property="userNumber" />
    <result column="theory_score" jdbcType="VARCHAR" property="theoryScore" />
    <result column="operate_score" jdbcType="VARCHAR" property="operateScore" />
    <result column="addup_score" jdbcType="VARCHAR" property="addupScore" />
    <result column="is_pass" jdbcType="VARCHAR" property="isPass" />
    <result column="skill_type" jdbcType="VARCHAR" property="skillType" />
    <result column="test_type" jdbcType="VARCHAR" property="testType" />
    <result column="jobs_id" jdbcType="VARCHAR" property="jobsId" />
    <result column="jobs_name" jdbcType="VARCHAR" property="jobsName" />
    <result column="match_level" jdbcType="VARCHAR" property="matchLevel" />
    <result column="auth_level" jdbcType="VARCHAR" property="authLevel" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="operater" jdbcType="VARCHAR" property="operater" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="modifier" jdbcType="VARCHAR" property="modifier" />
    <result column="verb_filed1" jdbcType="VARCHAR" property="verbFiled1" />
    <result column="verb_filed2" jdbcType="VARCHAR" property="verbFiled2" />
    <result column="verb_filed3" jdbcType="VARCHAR" property="verbFiled3" />
    <result column="verb_filed4" jdbcType="VARCHAR" property="verbFiled4" />
    <result column="verb_filed5" jdbcType="VARCHAR" property="verbFiled5" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, user_id, real_name, user_name, user_card, user_number, theory_score, operate_score, 
    addup_score, is_pass, skill_type, test_type, jobs_id, jobs_name, match_level, auth_level, 
    create_time, operater, update_time, modifier, verb_filed1, verb_filed2, verb_filed3, 
    verb_filed4, verb_filed5
  </sql>
  <select id="selectByExample" parameterType="com.metro.model.ScoreExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from score
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
	<if test="startNumber != null">
		limit #{startNumber} , #{pageSize}
	</if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from score
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from score
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.metro.model.ScoreExample">
    delete from score
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.metro.model.Score">
    insert into score (id, user_id, real_name, 
      user_name, user_card, user_number, 
      theory_score, operate_score, addup_score, 
      is_pass, skill_type, test_type, 
      jobs_id, jobs_name, match_level, 
      auth_level, create_time, operater, 
      update_time, modifier, verb_filed1, 
      verb_filed2, verb_filed3, verb_filed4, 
      verb_filed5)
    values (#{id,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, #{realName,jdbcType=VARCHAR}, 
      #{userName,jdbcType=VARCHAR}, #{userCard,jdbcType=VARCHAR}, #{userNumber,jdbcType=VARCHAR}, 
      #{theoryScore,jdbcType=VARCHAR}, #{operateScore,jdbcType=VARCHAR}, #{addupScore,jdbcType=VARCHAR}, 
      #{isPass,jdbcType=VARCHAR}, #{skillType,jdbcType=VARCHAR}, #{testType,jdbcType=VARCHAR}, 
      #{jobsId,jdbcType=VARCHAR}, #{jobsName,jdbcType=VARCHAR}, #{matchLevel,jdbcType=VARCHAR}, 
      #{authLevel,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{operater,jdbcType=VARCHAR}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{modifier,jdbcType=VARCHAR}, #{verbFiled1,jdbcType=VARCHAR}, 
      #{verbFiled2,jdbcType=VARCHAR}, #{verbFiled3,jdbcType=VARCHAR}, #{verbFiled4,jdbcType=VARCHAR}, 
      #{verbFiled5,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.metro.model.Score">
    insert into score
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="realName != null">
        real_name,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="userCard != null">
        user_card,
      </if>
      <if test="userNumber != null">
        user_number,
      </if>
      <if test="theoryScore != null">
        theory_score,
      </if>
      <if test="operateScore != null">
        operate_score,
      </if>
      <if test="addupScore != null">
        addup_score,
      </if>
      <if test="isPass != null">
        is_pass,
      </if>
      <if test="skillType != null">
        skill_type,
      </if>
      <if test="testType != null">
        test_type,
      </if>
      <if test="jobsId != null">
        jobs_id,
      </if>
      <if test="jobsName != null">
        jobs_name,
      </if>
      <if test="matchLevel != null">
        match_level,
      </if>
      <if test="authLevel != null">
        auth_level,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="operater != null">
        operater,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="modifier != null">
        modifier,
      </if>
      <if test="verbFiled1 != null">
        verb_filed1,
      </if>
      <if test="verbFiled2 != null">
        verb_filed2,
      </if>
      <if test="verbFiled3 != null">
        verb_filed3,
      </if>
      <if test="verbFiled4 != null">
        verb_filed4,
      </if>
      <if test="verbFiled5 != null">
        verb_filed5,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="realName != null">
        #{realName,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userCard != null">
        #{userCard,jdbcType=VARCHAR},
      </if>
      <if test="userNumber != null">
        #{userNumber,jdbcType=VARCHAR},
      </if>
      <if test="theoryScore != null">
        #{theoryScore,jdbcType=VARCHAR},
      </if>
      <if test="operateScore != null">
        #{operateScore,jdbcType=VARCHAR},
      </if>
      <if test="addupScore != null">
        #{addupScore,jdbcType=VARCHAR},
      </if>
      <if test="isPass != null">
        #{isPass,jdbcType=VARCHAR},
      </if>
      <if test="skillType != null">
        #{skillType,jdbcType=VARCHAR},
      </if>
      <if test="testType != null">
        #{testType,jdbcType=VARCHAR},
      </if>
      <if test="jobsId != null">
        #{jobsId,jdbcType=VARCHAR},
      </if>
      <if test="jobsName != null">
        #{jobsName,jdbcType=VARCHAR},
      </if>
      <if test="matchLevel != null">
        #{matchLevel,jdbcType=VARCHAR},
      </if>
      <if test="authLevel != null">
        #{authLevel,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operater != null">
        #{operater,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifier != null">
        #{modifier,jdbcType=VARCHAR},
      </if>
      <if test="verbFiled1 != null">
        #{verbFiled1,jdbcType=VARCHAR},
      </if>
      <if test="verbFiled2 != null">
        #{verbFiled2,jdbcType=VARCHAR},
      </if>
      <if test="verbFiled3 != null">
        #{verbFiled3,jdbcType=VARCHAR},
      </if>
      <if test="verbFiled4 != null">
        #{verbFiled4,jdbcType=VARCHAR},
      </if>
      <if test="verbFiled5 != null">
        #{verbFiled5,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.metro.model.ScoreExample" resultType="java.lang.Long">
    select count(*) from score
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update score
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.realName != null">
        real_name = #{record.realName,jdbcType=VARCHAR},
      </if>
      <if test="record.userName != null">
        user_name = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.userCard != null">
        user_card = #{record.userCard,jdbcType=VARCHAR},
      </if>
      <if test="record.userNumber != null">
        user_number = #{record.userNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.theoryScore != null">
        theory_score = #{record.theoryScore,jdbcType=VARCHAR},
      </if>
      <if test="record.operateScore != null">
        operate_score = #{record.operateScore,jdbcType=VARCHAR},
      </if>
      <if test="record.addupScore != null">
        addup_score = #{record.addupScore,jdbcType=VARCHAR},
      </if>
      <if test="record.isPass != null">
        is_pass = #{record.isPass,jdbcType=VARCHAR},
      </if>
      <if test="record.skillType != null">
        skill_type = #{record.skillType,jdbcType=VARCHAR},
      </if>
      <if test="record.testType != null">
        test_type = #{record.testType,jdbcType=VARCHAR},
      </if>
      <if test="record.jobsId != null">
        jobs_id = #{record.jobsId,jdbcType=VARCHAR},
      </if>
      <if test="record.jobsName != null">
        jobs_name = #{record.jobsName,jdbcType=VARCHAR},
      </if>
      <if test="record.matchLevel != null">
        match_level = #{record.matchLevel,jdbcType=VARCHAR},
      </if>
      <if test="record.authLevel != null">
        auth_level = #{record.authLevel,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.operater != null">
        operater = #{record.operater,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifier != null">
        modifier = #{record.modifier,jdbcType=VARCHAR},
      </if>
      <if test="record.verbFiled1 != null">
        verb_filed1 = #{record.verbFiled1,jdbcType=VARCHAR},
      </if>
      <if test="record.verbFiled2 != null">
        verb_filed2 = #{record.verbFiled2,jdbcType=VARCHAR},
      </if>
      <if test="record.verbFiled3 != null">
        verb_filed3 = #{record.verbFiled3,jdbcType=VARCHAR},
      </if>
      <if test="record.verbFiled4 != null">
        verb_filed4 = #{record.verbFiled4,jdbcType=VARCHAR},
      </if>
      <if test="record.verbFiled5 != null">
        verb_filed5 = #{record.verbFiled5,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update score
    set id = #{record.id,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=VARCHAR},
      real_name = #{record.realName,jdbcType=VARCHAR},
      user_name = #{record.userName,jdbcType=VARCHAR},
      user_card = #{record.userCard,jdbcType=VARCHAR},
      user_number = #{record.userNumber,jdbcType=VARCHAR},
      theory_score = #{record.theoryScore,jdbcType=VARCHAR},
      operate_score = #{record.operateScore,jdbcType=VARCHAR},
      addup_score = #{record.addupScore,jdbcType=VARCHAR},
      is_pass = #{record.isPass,jdbcType=VARCHAR},
      skill_type = #{record.skillType,jdbcType=VARCHAR},
      test_type = #{record.testType,jdbcType=VARCHAR},
      jobs_id = #{record.jobsId,jdbcType=VARCHAR},
      jobs_name = #{record.jobsName,jdbcType=VARCHAR},
      match_level = #{record.matchLevel,jdbcType=VARCHAR},
      auth_level = #{record.authLevel,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      operater = #{record.operater,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      modifier = #{record.modifier,jdbcType=VARCHAR},
      verb_filed1 = #{record.verbFiled1,jdbcType=VARCHAR},
      verb_filed2 = #{record.verbFiled2,jdbcType=VARCHAR},
      verb_filed3 = #{record.verbFiled3,jdbcType=VARCHAR},
      verb_filed4 = #{record.verbFiled4,jdbcType=VARCHAR},
      verb_filed5 = #{record.verbFiled5,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.metro.model.Score">
    update score
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="realName != null">
        real_name = #{realName,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userCard != null">
        user_card = #{userCard,jdbcType=VARCHAR},
      </if>
      <if test="userNumber != null">
        user_number = #{userNumber,jdbcType=VARCHAR},
      </if>
      <if test="theoryScore != null">
        theory_score = #{theoryScore,jdbcType=VARCHAR},
      </if>
      <if test="operateScore != null">
        operate_score = #{operateScore,jdbcType=VARCHAR},
      </if>
      <if test="addupScore != null">
        addup_score = #{addupScore,jdbcType=VARCHAR},
      </if>
      <if test="isPass != null">
        is_pass = #{isPass,jdbcType=VARCHAR},
      </if>
      <if test="skillType != null">
        skill_type = #{skillType,jdbcType=VARCHAR},
      </if>
      <if test="testType != null">
        test_type = #{testType,jdbcType=VARCHAR},
      </if>
      <if test="jobsId != null">
        jobs_id = #{jobsId,jdbcType=VARCHAR},
      </if>
      <if test="jobsName != null">
        jobs_name = #{jobsName,jdbcType=VARCHAR},
      </if>
      <if test="matchLevel != null">
        match_level = #{matchLevel,jdbcType=VARCHAR},
      </if>
      <if test="authLevel != null">
        auth_level = #{authLevel,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operater != null">
        operater = #{operater,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifier != null">
        modifier = #{modifier,jdbcType=VARCHAR},
      </if>
      <if test="verbFiled1 != null">
        verb_filed1 = #{verbFiled1,jdbcType=VARCHAR},
      </if>
      <if test="verbFiled2 != null">
        verb_filed2 = #{verbFiled2,jdbcType=VARCHAR},
      </if>
      <if test="verbFiled3 != null">
        verb_filed3 = #{verbFiled3,jdbcType=VARCHAR},
      </if>
      <if test="verbFiled4 != null">
        verb_filed4 = #{verbFiled4,jdbcType=VARCHAR},
      </if>
      <if test="verbFiled5 != null">
        verb_filed5 = #{verbFiled5,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.metro.model.Score">
    update score
    set user_id = #{userId,jdbcType=VARCHAR},
      real_name = #{realName,jdbcType=VARCHAR},
      user_name = #{userName,jdbcType=VARCHAR},
      user_card = #{userCard,jdbcType=VARCHAR},
      user_number = #{userNumber,jdbcType=VARCHAR},
      theory_score = #{theoryScore,jdbcType=VARCHAR},
      operate_score = #{operateScore,jdbcType=VARCHAR},
      addup_score = #{addupScore,jdbcType=VARCHAR},
      is_pass = #{isPass,jdbcType=VARCHAR},
      skill_type = #{skillType,jdbcType=VARCHAR},
      test_type = #{testType,jdbcType=VARCHAR},
      jobs_id = #{jobsId,jdbcType=VARCHAR},
      jobs_name = #{jobsName,jdbcType=VARCHAR},
      match_level = #{matchLevel,jdbcType=VARCHAR},
      auth_level = #{authLevel,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      operater = #{operater,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      modifier = #{modifier,jdbcType=VARCHAR},
      verb_filed1 = #{verbFiled1,jdbcType=VARCHAR},
      verb_filed2 = #{verbFiled2,jdbcType=VARCHAR},
      verb_filed3 = #{verbFiled3,jdbcType=VARCHAR},
      verb_filed4 = #{verbFiled4,jdbcType=VARCHAR},
      verb_filed5 = #{verbFiled5,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>